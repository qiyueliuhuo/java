<!--<?xml version="1.0" encoding="UTF-8"?>-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="site.wzhe"/>
    <cache:annotation-driven/>
    <context:property-placeholder location="classpath:site/wzhe/cache/caches/redis-config.properties" />

    <!-- spring thread pool executor -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 线程池维护线程的最少数量 -->
        <property name="corePoolSize" value="5" />
        <!-- 允许的空闲时间 -->
        <property name="keepAliveSeconds" value="200" />
        <!-- 线程池维护线程的最大数量 -->
        <property name="maxPoolSize" value="10" />
        <!-- 缓存队列 -->
        <property name="queueCapacity" value="20" />
        <!-- 对拒绝task的处理策略 -->
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>


    <bean id="accountServiceBean" class="site.wzhe.cache.caches.UserService"/>

<!--    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="default"/>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" p:name="users" />
            </set>
        </property>
    </bean>-->


    <!-- redis 相关配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <bean id="JedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}" p:pool-config-ref="poolConfig"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="JedisConnectionFactory" />
    </bean>

    <!-- spring自己的缓存管理器，这里定义了缓存位置名称 ，即注解中的value -->
    <!--<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">-->
        <!--<property name="caches">-->
            <!--<set>-->
                <!--&lt;!&ndash; 这里可以配置多个redis &ndash;&gt;-->
                <!--&lt;!&ndash; <bean class="com.cn.util.RedisCache">-->
                     <!--<property name="redisTemplate" ref="redisTemplate" />-->
                     <!--<property name="name" value="default"/>-->
                <!--</bean> &ndash;&gt;-->
                <!--<bean class="site.wzhe.cache.redis.RedisCache">-->
                    <!--<property name="redisTemplate" ref="redisTemplate" />-->
                    <!--<property name="name" value="common"/>-->
                    <!--&lt;!&ndash; common名称要在类或方法的注解中使用 &ndash;&gt;-->
                <!--</bean>-->
            <!--</set>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- ehcache 集成spring cache -->
    <!--<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"-->
          <!--p:cacheManager-ref="ehcache"/>-->
    <!--<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"-->
          <!--p:configLocation="classpath:site/wzhe/cache/caches/ehcache.xml"/>-->

    <!-- Guava -->
    <!-- 只需要定义cacheManager Bean就可以获取配置并运行，没必要定义缓存，因为它们将在需要时被创建 -->
    <bean id="cacheManager" class="org.springframework.cache.guava.GuavaCacheManager"/>
</beans>